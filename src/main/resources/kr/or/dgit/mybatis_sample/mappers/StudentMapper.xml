<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.dgit.mybatis_sample.dao.StudentDao">
	
	<sql id="selectSql">
		SELECT stud_id, name, email, phone FROM students
	</sql>
	
	<sql id="whereSql">
		<where>
			<if test="studId != null">
				stud_id = #{studId}
			</if>
		</where>
	</sql>
	
	<sql id="updatesql">
		update students set name=#{name}, email=#{email}, phone=#{phone}, dob=#{dob}
		where stud_id=#{studId}
	</sql>
	
	<select id="selectStudentByNo" parameterType="Student" resultType="Student">
		<include refid="selectSql"/>
		<include refid="whereSql"/>
		<!-- SELECT stud_id, name, email, phone FROM students where stud_id=#{studId}; -->
	</select>
	
	<select id="selectStudentByAll" resultType="Student">
		<include refid="selectSql"/>
		<!-- SELECT stud_id, name, email, phone FROM students -->
	</select>
	
	
	<!-- insert -->
	<sql id="insertSql">
		insert into students(stud_id, name, email, phone, dob) 
        values(#{studId}, #{name}, #{email}, #{phone}, #{dob})
	</sql>
	
	<insert id="insertStudent" parameterType="Student">
		<include refid="insertSql"/>
	</insert>
	
	<insert id="insertEnumStudent" parameterType="Student">
		insert into students(stud_id, name, email, phone, dob, gender) 
        values(#{studId}, #{name}, #{email}, #{phone}, #{dob},#{gender})
	</insert>
	
	<!-- update -->
	<update id="updateStudent" parameterType="Student">
		<include refid="updatesql"></include>
	</update>
	
	<!-- delete -->
	<sql id="deleteSql">
		delete from students where stud_id=#{studId}
	</sql>
	<delete id="deleteStudent" parameterType="int">
		<include refid="deleteSql"></include>
	</delete>
	
	<sql id="selectSql2">
		SELECT stud_id, name, email, phone, dob FROM students
	</sql>
	
	<!-- ResultMap을 이용 -->
	<resultMap type="Student" id="StudentResult">
		<id property="studId" column="stud_id"></id>
		<result property="name" column="name"></result>
		<result property="email" column="email"></result>
		<result property="phone" column="phone"></result>
		<result property="dob" column="dob"></result>
	</resultMap>
	
	<select id="selectStudentByAllForResultMap" resultMap="StudentResult">
		<include refid="selectSql2"></include>
	</select>
	
	<select id="selectStudentByAllForHashMap" resultType="map">
		<include refid="selectSql2"></include>
	</select>
	
	<!-- 결과매핑확장 typehandler안써도 되는 방법 -->
	<resultMap type="Student" id="StudentWithAddressResult" extends="StudentResult">
		<result property="address.addrId" column="addr_id"></result>
		<result property="address.street" column="street"></result>
		<result property="address.city" column="city"></result>
		<result property="address.state" column="state"></result>
		<result property="address.zip" column="zip"></result>
		<result property="address.country" column="country"></result>
	</resultMap>
	
	<sql id="selectJoinAddressSql">
		SELECT stud_id, name, email, dob, phone, A.addr_id, city,
		state, zip, country FROM students s left outer join
		addresses a on s.addr_id=a.addr_id
	</sql>
	<select id="selectStudentByForResultMapExtends" parameterType="Student"
	resultMap="StudentWithAddressResult">
		<include refid="selectJoinAddressSql"></include>
		<include refid="whereSql"></include>
	</select>
	
	<resultMap type="Student" id="StudentAssociation" extends="StudentResult">
		<association property="address" resultMap="kr.or.dgit.mybatis_sample.dao.AddressDao.AddressResult"></association>
	</resultMap>
	<select id="selectStudentByNoAssociation" parameterType="Student" resultMap="StudentAssociation">
		<include refid="selectJoinAddressSql"></include>
		<include refid="whereSql"></include>
	</select>
	
	<!-- 여러개의 파라미터 전달하기 -->
	<resultMap type="Student" id="StudentGenderResult" extends="StudentResult">
		<result property="gender" column="gender"></result>
	</resultMap>
	<sql id="selectParameterSql">
		select stud_id, name, email, phone, dob, gender from students
	</sql>
	<sql id="whereNameEmailSql">
		<where>
			<if test="name != null">
				name = #{name}
			</if>
			<if test="email != null">
				and email = #{email}
			</if>
		</where>
	</sql>
	<select id="selectAllStudentByParam" resultMap="StudentGenderResult">
		<include refid="selectParameterSql"></include>
			where name=#{param1} and email=#{param2}
		
	</select>
	<select id="selectAllStudentByStudent" parameterType="Student" resultMap="StudentGenderResult">
		<include refid="selectParameterSql"></include>
		<include refid="whereNameEmailSql"></include>
	</select>
	<select id="selectAllStudentByMap" parameterType="map" resultMap="StudentGenderResult">
		<include refid="selectParameterSql"></include>
		<include refid="whereNameEmailSql"></include>
	</select>
	
</mapper>


